# ============================================================================
# Hello Feature - Agent Execution Instructions
# @file src/features/hello/hello.instructions.yml
# ============================================================================

feature: hello
version: 1.0.0
created: 2025-01-23T10:30:00Z
created_by: claude.ai & Krishna Teja GS
last_updated: 2025-01-23T10:30:00Z
updated_by: agent_with_human_supervision

# ============================================================================
# AGENT INSTRUCTIONS
# ============================================================================

agent_instructions: |
  You are executing the hello feature implementation using FLUX step command keywords. Follow these rules:

  MEMORY & RESUME:
  1. Check if hello.actions.log exists in this directory
  2. If exists: Read last log entry to see where you stopped
  3. Look for "TASK_X.Y_COMPLETE" to resume from next step
  4. If not exists: Start fresh with task 1.1

  EXECUTION:
  1. Execute tasks 1.1-5.3 in order using command keywords
  2. All steps must start with: Log:, Read:, Create:, Run:, Print:, Condition:, or Wait:
  3. Log every step to hello.actions.log
  4. Stop and ask human if confused or stuck

  DATA SOURCES:
  - hello.requirements.yml (business requirements)
  - hello.specification.json (technical specs)
  - APPKIT_LLM_GUIDE.md (VoilaJSX patterns)

# ============================================================================
# AGENT CONFIGURATION
# ============================================================================

config:
  log_file: 'hello.actions.log'
  commit_strategy: 'flux_per_task'
  max_retries_per_task: 3
  validation_timeout: 30000
  git_branch: 'feature/hello-implementation'

validation_commands:
  schema: 'npm run flux:schema hello.{type}.{ext}'
  contract: 'npm run flux:contract hello/{endpoint}'
  types: 'npm run flux:types hello/{endpoint}'
  lint: 'npm run flux:lint hello/{endpoint}'
  test: 'npm run flux:test hello/{endpoint}'
  compliance: 'npm run flux:compliance hello'
  full: 'npm run flux:check hello'
  skim: 'npm run flux:skim hello --endpoint={endpoint} --type={type}'

# ============================================================================
# TASKS (Execute 1.1â†’5.3)
# ============================================================================

tasks:
  1.1:
    name: 'analyze_requirements'
    what: 'Read and understand all specifications for hello feature'
    steps:
      - 'Log: Starting requirements analysis for hello feature'
      - 'Read: hello.requirements.yml for business context and user stories'
      - 'Read: hello.specification.json for technical specs and endpoints'
      - 'Read: APPKIT_LLM_GUIDE.md for VoilaJSX patterns and best practices'
      - 'Log: Analysis complete - identified 2 endpoints (main + @name)'
      - 'Print: Execution plan for 2 endpoints: main=basic greeting, @name=personalized+secure'
      - 'Log: Requirements analysis task completed successfully'
    max_retries: 3
    validation_after: 'schema'
    if_stuck: 'Ask human for clarification on requirements'

  2.1:
    name: 'create_main_contract'
    what: 'Build the API contract file for basic hello endpoint'
    steps:
      - 'Log: Starting main endpoint contract creation'
      - 'Read: Contract specification from hello.specification.json endpoints.main.contract'
      - 'Create: src/features/hello/main/main.contract.ts with VoilaJSX imports'
      - 'Log: Contract file created with routes and test definitions'
      - 'Run: npm run flux:contract hello/main for validation'
      - 'Log: Main contract validation completed successfully'
    max_retries: 3
    validation_after: 'contract'
    if_stuck: 'Ask human for help with contract structure'

  2.2:
    name: 'create_name_contract'
    what: 'Build the API contract file for personalized hello endpoint'
    steps:
      - 'Log: Starting @name endpoint contract creation'
      - 'Read: Contract specification from hello.specification.json endpoints.@name.contract'
      - 'Create: src/features/hello/@name/@name.contract.ts with security imports'
      - 'Log: Contract file created with security validation routes'
      - 'Run: npm run flux:contract hello/@name for validation'
      - 'Log: Name contract validation completed successfully'
    max_retries: 3
    validation_after: 'contract'
    if_stuck: 'Ask human for help with security contract patterns'

  3.1:
    name: 'create_main_logic'
    what: 'Implement business logic for basic hello endpoint'
    steps:
      - 'Log: Starting main endpoint logic implementation'
      - 'Read: Logic specification from hello.specification.json endpoints.main.logic'
      - 'Read: VoilaJSX patterns from APPKIT_LLM_GUIDE.md for .get() methodology'
      - 'Create: src/features/hello/main/main.logic.ts with business rules'
      - 'Log: Logic file created with VoilaJSX patterns and error handling'
      - 'Run: npm run flux:types hello/main for type validation'
      - 'Run: npm run flux:lint hello/main for code quality'
      - 'Log: Main logic validation completed successfully'
    max_retries: 3
    validation_after: 'types'
    if_stuck: 'Ask human for help with VoilaJSX implementation'

  3.2:
    name: 'create_name_logic'
    what: 'Implement business logic for personalized hello endpoint with security'
    steps:
      - 'Log: Starting @name endpoint logic implementation'
      - 'Read: Logic specification from hello.specification.json endpoints.@name.logic'
      - 'Read: Security patterns from APPKIT_LLM_GUIDE.md for input sanitization'
      - 'Create: src/features/hello/@name/@name.logic.ts with security validation'
      - 'Log: Logic file created with XSS protection and input validation'
      - 'Run: npm run flux:types hello/@name for type validation'
      - 'Run: npm run flux:lint hello/@name for security compliance'
      - 'Log: Name logic validation completed successfully'
    max_retries: 3
    validation_after: 'types'
    if_stuck: 'Ask human for help with security implementation'

  4.1:
    name: 'create_main_tests'
    what: 'Generate comprehensive tests for basic hello endpoint'
    steps:
      - 'Log: Starting main endpoint test creation'
      - 'Read: Test specification from hello.specification.json endpoints.main.test'
      - 'Create: src/features/hello/main/main.test.ts with contract validation tests'
      - 'Log: Test file created with response format and requestId validation'
      - 'Run: npm run flux:test hello/main for test execution'
      - 'Log: Main tests validation completed successfully'
    max_retries: 3
    validation_after: 'test'
    if_stuck: 'Ask human for help with test implementation'

  4.2:
    name: 'create_name_tests'
    what: 'Generate security-focused tests for personalized hello endpoint'
    steps:
      - 'Log: Starting @name endpoint test creation'
      - 'Read: Test specification from hello.specification.json endpoints.@name.test'
      - 'Create: src/features/hello/@name/@name.test.ts with security test coverage'
      - 'Log: Test file created with XSS, validation, and edge case tests'
      - 'Run: npm run flux:test hello/@name for security test execution'
      - 'Log: Name tests validation completed successfully'
    max_retries: 3
    validation_after: 'test'
    if_stuck: 'Ask human for help with security testing'

  5.1:
    name: 'validate_endpoints'
    what: 'Run individual validation checks on both endpoints'
    steps:
      - 'Log: Starting individual endpoint validation'
      - 'Run: npm run flux:types hello/main for main endpoint types'
      - 'Run: npm run flux:lint hello/main for main endpoint linting'
      - 'Run: npm run flux:test hello/main for main endpoint testing'
      - 'Run: npm run flux:types hello/@name for name endpoint types'
      - 'Run: npm run flux:lint hello/@name for name endpoint linting'
      - 'Run: npm run flux:test hello/@name for name endpoint testing'
      - 'Log: All individual endpoint validations passed successfully'
    max_retries: 3
    validation_after: 'full'
    if_stuck: 'Ask human for help with validation failures'

  5.2:
    name: 'full_validation'
    what: 'Run complete FLUX validation pipeline on entire feature'
    steps:
      - 'Log: Starting full feature validation pipeline'
      - 'Run: npm run flux:check hello for complete pipeline validation'
      - 'Log: Full validation pipeline completed successfully'
      - 'Print: All contracts, types, tests, and compliance checks passed'
    max_retries: 3
    validation_after: 'compliance'
    if_stuck: 'Ask human for help with pipeline failures'

  5.3:
    name: 'generate_compliance'
    what: 'Generate final compliance documentation and manifests'
    steps:
      - 'Log: Starting compliance generation and final validation'
      - 'Run: npm run flux:compliance hello for compliance check'
      - 'Log: Compliance check completed with deployment readiness verification'
      - 'Create: Final compliance report with reliability metrics'
      - 'Log: Hello feature implementation completed successfully'
      - 'Print: Feature ready for deployment with 100% validation coverage'
    max_retries: 3
    validation_after: 'compliance'
    if_stuck: 'Ask human for help with compliance requirements'

# ============================================================================
# FAILURE HANDLING
# ============================================================================

failure_handling:
  validation_failure:
    action: 'retry_with_error_analysis'
    escalate_after: '3_failures'

  security_failure:
    action: 'stop_and_notify_human_immediately'

  git_failure:
    action: 'rollback_and_retry'
    command: 'git revert HEAD~1'

  api_error:
    action: 'log_error_and_retry'

  file_creation_error:
    action: 'check_permissions_and_retry'

  parsing_confusion:
    action: 'stop_and_ask_developer_for_clarification'

# ============================================================================
# SUCCESS CRITERIA
# ============================================================================

completion_criteria:
  all_tasks_complete: 'Tasks 1.1-5.3 all show TASK_X.Y_COMPLETE in hello.actions.log'
  all_validations_pass: 'No validation failures in hello.actions.log'
  deployment_ready: 'Compliance shows deployment_ready=true with 90%+ reliability'
  git_clean: 'No rollbacks or failed commits in feature branch'

final_log_entry: 'FEATURE_COMPLETE: hello deployment_ready=true reliability=100% human_approval=pending'
