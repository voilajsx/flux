{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "FLUX Framework Instructions Schema",
  "description": "Schema for {feature}.instructions.yml files with step command keywords",
  "type": "object",
  "required": [
    "feature",
    "version",
    "agent_instructions",
    "config",
    "validation_commands",
    "tasks",
    "failure_handling",
    "completion_criteria"
  ],
  "properties": {
    "feature": {
      "type": "string",
      "pattern": "^[a-z][a-z0-9-]*$",
      "description": "Feature name (must match blueprint)"
    },
    "version": {
      "type": "string",
      "pattern": "^\\d+\\.\\d+\\.\\d+$",
      "description": "Semantic version"
    },
    "created": {
      "oneOf": [{ "type": "string" }, { "type": "object" }],
      "description": "Creation timestamp"
    },
    "created_by": {
      "type": "string",
      "description": "Creator (human)"
    },
    "last_updated": {
      "oneOf": [{ "type": "string" }, { "type": "object" }],
      "description": "Last update timestamp"
    },
    "updated_by": {
      "type": "string",
      "description": "Last modifier"
    },
    "agent_instructions": {
      "type": "string",
      "minLength": 50,
      "description": "Multi-line instructions for agent execution with step keywords"
    },
    "config": {
      "type": "object",
      "required": ["log_file", "commit_strategy", "max_retries_per_task"],
      "properties": {
        "log_file": {
          "type": "string",
          "pattern": "\\.(log|txt)$",
          "description": "Action log filename"
        },
        "commit_strategy": {
          "type": "string",
          "enum": ["flux_per_task", "flux_per_step", "manual"],
          "description": "Git commit strategy"
        },
        "max_retries_per_task": {
          "type": "integer",
          "minimum": 1,
          "maximum": 10,
          "description": "Maximum retries per task"
        },
        "validation_timeout": {
          "type": "integer",
          "description": "Validation timeout in milliseconds"
        },
        "git_branch": {
          "type": "string",
          "description": "Git branch for feature development"
        }
      }
    },
    "validation_commands": {
      "type": "object",
      "required": [
        "schema",
        "contract",
        "types",
        "lint",
        "test",
        "compliance",
        "full",
        "skim"
      ],
      "properties": {
        "schema": {
          "type": "string",
          "description": "Schema validation command"
        },
        "contract": {
          "type": "string",
          "description": "Contract validation command"
        },
        "types": {
          "type": "string",
          "description": "TypeScript validation command"
        },
        "lint": {
          "type": "string",
          "description": "Linting command"
        },
        "test": {
          "type": "string",
          "description": "Test execution command"
        },
        "compliance": {
          "type": "string",
          "description": "Compliance check command"
        },
        "full": {
          "type": "string",
          "description": "Full validation pipeline"
        },
        "skim": {
          "type": "string",
          "description": "Quick validation command with placeholders"
        }
      }
    },
    "tasks": {
      "type": "object",
      "minProperties": 1,
      "patternProperties": {
        "^[0-9]+\\.[0-9]+$": {
          "type": "object",
          "required": ["name", "what", "steps"],
          "properties": {
            "name": {
              "type": "string",
              "pattern": "^[a-z_]+$",
              "description": "Task name (snake_case)"
            },
            "what": {
              "type": "string",
              "minLength": 10,
              "description": "What this task accomplishes"
            },
            "steps": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "string",
                "pattern": "^(Log:|Read:|Create:|Run:|Print:|Condition:|Wait:)\\s",
                "description": "Step must start with command keyword"
              }
            },
            "max_retries": {
              "type": "integer",
              "minimum": 1,
              "maximum": 10,
              "description": "Maximum retries for this task"
            },
            "validation_after": {
              "type": "string",
              "description": "Validation to run after task completion"
            },
            "if_stuck": {
              "type": "string",
              "description": "Action when task gets stuck"
            },
            "git_branch": {
              "type": "string",
              "description": "Git branch name for this task"
            },
            "depends_on": {
              "type": "array",
              "items": { "type": "string" },
              "description": "Task IDs that must complete first"
            }
          }
        }
      }
    },
    "failure_handling": {
      "type": "object",
      "required": ["validation_failure", "security_failure", "git_failure"],
      "properties": {
        "validation_failure": {
          "type": "object",
          "required": ["action"],
          "properties": {
            "action": {
              "type": "string",
              "description": "Action on validation failure"
            },
            "escalate_after": {
              "type": "string",
              "description": "When to escalate"
            }
          }
        },
        "security_failure": {
          "type": "object",
          "required": ["action"],
          "properties": {
            "action": {
              "type": "string",
              "description": "Action on security failure"
            }
          }
        },
        "git_failure": {
          "type": "object",
          "required": ["action"],
          "properties": {
            "action": {
              "type": "string",
              "description": "Action on git failure"
            },
            "command": {
              "type": "string",
              "description": "Rollback command"
            }
          }
        },
        "api_error": {
          "type": "object",
          "properties": {
            "action": {
              "type": "string",
              "description": "Action on API error"
            }
          }
        },
        "file_creation_error": {
          "type": "object",
          "properties": {
            "action": {
              "type": "string",
              "description": "Action on file creation error"
            }
          }
        },
        "parsing_confusion": {
          "type": "object",
          "properties": {
            "action": {
              "type": "string",
              "description": "Action when agent is confused"
            }
          }
        }
      }
    },
    "completion_criteria": {
      "type": "object",
      "required": [
        "all_tasks_complete",
        "all_validations_pass",
        "deployment_ready"
      ],
      "properties": {
        "all_tasks_complete": {
          "type": "string",
          "description": "How to check all tasks done"
        },
        "all_validations_pass": {
          "type": "string",
          "description": "How to check validations pass"
        },
        "deployment_ready": {
          "type": "string",
          "description": "How to check deployment readiness"
        },
        "git_clean": {
          "type": "string",
          "description": "Git cleanliness check"
        }
      }
    },
    "final_log_entry": {
      "type": "string",
      "description": "Success log message template"
    }
  },
  "additionalProperties": false
}
